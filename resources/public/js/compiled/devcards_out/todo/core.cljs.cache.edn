{:rename-macros {}, :renames {}, :use-macros {deftest devcards.core, defcard devcards.core}, :excludes #{}, :name todo.core, :imports nil, :requires {sab sablono.core, sablono.core sablono.core}, :uses nil, :defs {delete-item {:protocol-inline nil, :meta {:file "/Users/alexmin/todo/src/todo/core.cljs", :line 11, :column 7, :end-line 11, :end-column 18, :arglists (quote ([state memory index]))}, :name todo.core/delete-item, :variadic false, :file "src/todo/core.cljs", :end-column 18, :method-params ([state memory index]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 3, :fn-var true, :arglists (quote ([state memory index]))}, render-memory {:protocol-inline nil, :meta {:file "/Users/alexmin/todo/src/todo/core.cljs", :line 15, :column 7, :end-line 15, :end-column 20, :arglists (quote ([state _ memory]))}, :name todo.core/render-memory, :variadic false, :file "src/todo/core.cljs", :end-column 20, :method-params ([state _ memory]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 3, :fn-var true, :arglists (quote ([state _ memory]))}, render-counter-body {:protocol-inline nil, :meta {:file "/Users/alexmin/todo/src/todo/core.cljs", :line 28, :column 7, :end-line 28, :end-column 26, :arglists (quote ([state counter memory]))}, :name todo.core/render-counter-body, :variadic false, :file "src/todo/core.cljs", :end-column 26, :method-params ([state counter memory]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 3, :fn-var true, :arglists (quote ([state counter memory]))}, render-app {:protocol-inline nil, :meta {:file "/Users/alexmin/todo/src/todo/core.cljs", :line 39, :column 7, :end-line 39, :end-column 17, :arglists (quote ([state]))}, :name todo.core/render-app, :variadic false, :file "src/todo/core.cljs", :end-column 17, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, main {:protocol-inline nil, :meta {:file "/Users/alexmin/todo/src/todo/core.cljs", :line 55, :column 7, :end-line 55, :end-column 11, :arglists (quote ([]))}, :name todo.core/main, :variadic false, :file "src/todo/core.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 55, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {dc devcards.core, devcards.core devcards.core, sab sablono.core, sablono.core sablono.core}, :cljs.analyzer/constants {:seen #{:todo.core :path :inspect-data :func :name :memory :documentation :counter :main-obj :initial-data :f-card :options}, :order [:memory :counter :path :func :todo.core :f-card :name :documentation :main-obj :initial-data :options :inspect-data]}, :doc nil}